<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taotieshop.demo.dao.CartMapper">
  <resultMap id="BaseResultMap" type="com.taotieshop.demo.entity.Cart">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="session_id" jdbcType="CHAR" property="session_id" />
    <result column="goods_id" jdbcType="INTEGER" property="goods_id" />
    <result column="goods_sn" jdbcType="VARCHAR" property="goods_sn" />
    <result column="product_id" jdbcType="INTEGER" property="product_id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goods_name" />
    <result column="market_price" jdbcType="DECIMAL" property="market_price" />
    <result column="retail_price" jdbcType="DECIMAL" property="retail_price" />
    <result column="number" jdbcType="SMALLINT" property="number" />
    <result column="goods_specifition_ids" jdbcType="VARCHAR" property="goods_specifition_ids" />
    <result column="checked" jdbcType="BIT" property="checked" />
    <result column="list_pic_url" jdbcType="VARCHAR" property="list_pic_url" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.taotieshop.demo.entity.Cart">
    <result column="goods_specifition_name_value" jdbcType="LONGVARCHAR" property="goods_specifition_name_value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, session_id, goods_id, goods_sn, product_id, goods_name, market_price, 
    retail_price, number, goods_specifition_ids, checked, list_pic_url
  </sql>
  <sql id="Blob_Column_List">
    goods_specifition_name_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.taotieshop.demo.entity.CartExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.taotieshop.demo.entity.CartExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.taotieshop.demo.entity.CartExample">
    delete from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taotieshop.demo.entity.Cart">
    insert into nideshop_cart (id, user_id, session_id, 
      goods_id, goods_sn, product_id, 
      goods_name, market_price, retail_price, 
      number, goods_specifition_ids, checked, 
      list_pic_url, goods_specifition_name_value
      )
    values (#{id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{session_id,jdbcType=CHAR}, 
      #{goods_id,jdbcType=INTEGER}, #{goods_sn,jdbcType=VARCHAR}, #{product_id,jdbcType=INTEGER}, 
      #{goods_name,jdbcType=VARCHAR}, #{market_price,jdbcType=DECIMAL}, #{retail_price,jdbcType=DECIMAL}, 
      #{number,jdbcType=SMALLINT}, #{goods_specifition_ids,jdbcType=VARCHAR}, #{checked,jdbcType=BIT}, 
      #{list_pic_url,jdbcType=VARCHAR}, #{goods_specifition_name_value,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taotieshop.demo.entity.Cart">
    insert into nideshop_cart
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="session_id != null">
        session_id,
      </if>
      <if test="goods_id != null">
        goods_id,
      </if>
      <if test="goods_sn != null">
        goods_sn,
      </if>
      <if test="product_id != null">
        product_id,
      </if>
      <if test="goods_name != null">
        goods_name,
      </if>
      <if test="market_price != null">
        market_price,
      </if>
      <if test="retail_price != null">
        retail_price,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="goods_specifition_ids != null">
        goods_specifition_ids,
      </if>
      <if test="checked != null">
        checked,
      </if>
      <if test="list_pic_url != null">
        list_pic_url,
      </if>
      <if test="goods_specifition_name_value != null">
        goods_specifition_name_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="session_id != null">
        #{session_id,jdbcType=CHAR},
      </if>
      <if test="goods_id != null">
        #{goods_id,jdbcType=INTEGER},
      </if>
      <if test="goods_sn != null">
        #{goods_sn,jdbcType=VARCHAR},
      </if>
      <if test="product_id != null">
        #{product_id,jdbcType=INTEGER},
      </if>
      <if test="goods_name != null">
        #{goods_name,jdbcType=VARCHAR},
      </if>
      <if test="market_price != null">
        #{market_price,jdbcType=DECIMAL},
      </if>
      <if test="retail_price != null">
        #{retail_price,jdbcType=DECIMAL},
      </if>
      <if test="number != null">
        #{number,jdbcType=SMALLINT},
      </if>
      <if test="goods_specifition_ids != null">
        #{goods_specifition_ids,jdbcType=VARCHAR},
      </if>
      <if test="checked != null">
        #{checked,jdbcType=BIT},
      </if>
      <if test="list_pic_url != null">
        #{list_pic_url,jdbcType=VARCHAR},
      </if>
      <if test="goods_specifition_name_value != null">
        #{goods_specifition_name_value,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taotieshop.demo.entity.CartExample" resultType="java.lang.Long">
    select count(*) from nideshop_cart
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nideshop_cart
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
      <if test="record.session_id != null">
        session_id = #{record.session_id,jdbcType=CHAR},
      </if>
      <if test="record.goods_id != null">
        goods_id = #{record.goods_id,jdbcType=INTEGER},
      </if>
      <if test="record.goods_sn != null">
        goods_sn = #{record.goods_sn,jdbcType=VARCHAR},
      </if>
      <if test="record.product_id != null">
        product_id = #{record.product_id,jdbcType=INTEGER},
      </if>
      <if test="record.goods_name != null">
        goods_name = #{record.goods_name,jdbcType=VARCHAR},
      </if>
      <if test="record.market_price != null">
        market_price = #{record.market_price,jdbcType=DECIMAL},
      </if>
      <if test="record.retail_price != null">
        retail_price = #{record.retail_price,jdbcType=DECIMAL},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=SMALLINT},
      </if>
      <if test="record.goods_specifition_ids != null">
        goods_specifition_ids = #{record.goods_specifition_ids,jdbcType=VARCHAR},
      </if>
      <if test="record.checked != null">
        checked = #{record.checked,jdbcType=BIT},
      </if>
      <if test="record.list_pic_url != null">
        list_pic_url = #{record.list_pic_url,jdbcType=VARCHAR},
      </if>
      <if test="record.goods_specifition_name_value != null">
        goods_specifition_name_value = #{record.goods_specifition_name_value,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update nideshop_cart
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.user_id,jdbcType=INTEGER},
      session_id = #{record.session_id,jdbcType=CHAR},
      goods_id = #{record.goods_id,jdbcType=INTEGER},
      goods_sn = #{record.goods_sn,jdbcType=VARCHAR},
      product_id = #{record.product_id,jdbcType=INTEGER},
      goods_name = #{record.goods_name,jdbcType=VARCHAR},
      market_price = #{record.market_price,jdbcType=DECIMAL},
      retail_price = #{record.retail_price,jdbcType=DECIMAL},
      number = #{record.number,jdbcType=SMALLINT},
      goods_specifition_ids = #{record.goods_specifition_ids,jdbcType=VARCHAR},
      checked = #{record.checked,jdbcType=BIT},
      list_pic_url = #{record.list_pic_url,jdbcType=VARCHAR},
      goods_specifition_name_value = #{record.goods_specifition_name_value,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nideshop_cart
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.user_id,jdbcType=INTEGER},
      session_id = #{record.session_id,jdbcType=CHAR},
      goods_id = #{record.goods_id,jdbcType=INTEGER},
      goods_sn = #{record.goods_sn,jdbcType=VARCHAR},
      product_id = #{record.product_id,jdbcType=INTEGER},
      goods_name = #{record.goods_name,jdbcType=VARCHAR},
      market_price = #{record.market_price,jdbcType=DECIMAL},
      retail_price = #{record.retail_price,jdbcType=DECIMAL},
      number = #{record.number,jdbcType=SMALLINT},
      goods_specifition_ids = #{record.goods_specifition_ids,jdbcType=VARCHAR},
      checked = #{record.checked,jdbcType=BIT},
      list_pic_url = #{record.list_pic_url,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>
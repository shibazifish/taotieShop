<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taotieshop.demo.dao.ClockMapper">
  <resultMap id="BaseResultMap" type="com.taotieshop.demo.entity.Clock">
    <result column="clock_id" jdbcType="INTEGER" property="clock_id" />
    <result column="open_id" jdbcType="VARCHAR" property="open_id" />
    <result column="run_data" jdbcType="INTEGER" property="run_data" />
    <result column="ice_data" jdbcType="INTEGER" property="ice_data" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="form_id" jdbcType="VARCHAR" property="form_id" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    clock_id, open_id, run_data, ice_data, create_time, form_id
  </sql>
  <select id="selectByExample" parameterType="com.taotieshop.demo.entity.ClockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ice_clock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.taotieshop.demo.entity.ClockExample">
    delete from ice_clock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taotieshop.demo.entity.Clock">
    insert into ice_clock (clock_id, open_id, run_data, 
      ice_data, create_time, form_id
      )
    values (#{clock_id,jdbcType=INTEGER}, #{open_id,jdbcType=VARCHAR}, #{run_data,jdbcType=INTEGER}, 
      #{ice_data,jdbcType=INTEGER}, #{create_time,jdbcType=TIMESTAMP}, #{form_id,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taotieshop.demo.entity.Clock">
    insert into ice_clock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clock_id != null">
        clock_id,
      </if>
      <if test="open_id != null">
        open_id,
      </if>
      <if test="run_data != null">
        run_data,
      </if>
      <if test="ice_data != null">
        ice_data,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="form_id != null">
        form_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clock_id != null">
        #{clock_id,jdbcType=INTEGER},
      </if>
      <if test="open_id != null">
        #{open_id,jdbcType=VARCHAR},
      </if>
      <if test="run_data != null">
        #{run_data,jdbcType=INTEGER},
      </if>
      <if test="ice_data != null">
        #{ice_data,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="form_id != null">
        #{form_id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taotieshop.demo.entity.ClockExample" resultType="java.lang.Long">
    select count(*) from ice_clock
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ice_clock
    <set>
      <if test="record.clock_id != null">
        clock_id = #{record.clock_id,jdbcType=INTEGER},
      </if>
      <if test="record.open_id != null">
        open_id = #{record.open_id,jdbcType=VARCHAR},
      </if>
      <if test="record.run_data != null">
        run_data = #{record.run_data,jdbcType=INTEGER},
      </if>
      <if test="record.ice_data != null">
        ice_data = #{record.ice_data,jdbcType=INTEGER},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.form_id != null">
        form_id = #{record.form_id,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ice_clock
    set clock_id = #{record.clock_id,jdbcType=INTEGER},
      open_id = #{record.open_id,jdbcType=VARCHAR},
      run_data = #{record.run_data,jdbcType=INTEGER},
      ice_data = #{record.ice_data,jdbcType=INTEGER},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      form_id = #{record.form_id,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="countOneDayRecord" parameterType="com.taotieshop.demo.entity.Clock" resultType="java.lang.Integer">
    select count(*) from ice_clock WHERE open_id = #{open_id,jdbcType=VARCHAR} AND to_days(create_time) = to_days(#{create_time,jdbcType=TIMESTAMP})
  </select>

  <update id="updateByDay" parameterType="com.taotieshop.demo.entity.Clock">
    update ice_clock
    set run_data = #{run_data,jdbcType=INTEGER},
    ice_data = #{ice_data,jdbcType=INTEGER},
    create_time = #{create_time,jdbcType=TIMESTAMP},
      form_id = #{form_id,jdbcType=VARCHAR}
    WHERE open_id = #{open_id,jdbcType=VARCHAR} AND to_days(create_time) = to_days(#{create_time,jdbcType=TIMESTAMP})
  </update>
  <update id="updateClearIce" parameterType="com.taotieshop.demo.entity.Clock">
    update ice_clock
    set ice_data = 0
    WHERE open_id = #{open_id,jdbcType=VARCHAR} AND to_days(create_time) &lt; to_days(#{create_time,jdbcType=TIMESTAMP})
  </update>
  <update id="updateInviterIce" parameterType="com.taotieshop.demo.entity.Clock">
    update ice_clock
    set ice_data = (SELECT max(a.ice_data) FROM (SELECT IFNULL(ice_data,0) + 1 ice_data FROM  ice_clock WHERE open_id = #{open_id,jdbcType=VARCHAR} AND create_time = #{create_time,jdbcType=TIMESTAMP})a),
    run_data = 1000
    WHERE open_id = #{open_id,jdbcType=VARCHAR} AND create_time = #{create_time,jdbcType=TIMESTAMP}
  </update>
  <select id="queryScheduleInfo" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ice_clock ic where ic.open_id not in(
    SELECT t.open_id FROM ice_clock t where TO_DAYS(t.create_time) = TO_DAYS(NOW())-1)
    and TO_DAYS(ic.create_time) = TO_DAYS(NOW())-2
    and ic.form_id is not NULL
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taotieshop.demo.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.taotieshop.demo.entity.Order">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="order_sn" jdbcType="VARCHAR" property="order_sn" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="order_status" jdbcType="BIT" property="order_status" />
    <result column="shipping_status" jdbcType="BIT" property="shipping_status" />
    <result column="pay_status" jdbcType="BIT" property="pay_status" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="country" jdbcType="SMALLINT" property="country" />
    <result column="province" jdbcType="SMALLINT" property="province" />
    <result column="city" jdbcType="SMALLINT" property="city" />
    <result column="district" jdbcType="SMALLINT" property="district" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="postscript" jdbcType="VARCHAR" property="postscript" />
    <result column="shipping_id" jdbcType="TINYINT" property="shipping_id" />
    <result column="shipping_name" jdbcType="VARCHAR" property="shipping_name" />
    <result column="pay_id" jdbcType="TINYINT" property="pay_id" />
    <result column="pay_name" jdbcType="VARCHAR" property="pay_name" />
    <result column="shipping_fee" jdbcType="DECIMAL" property="shipping_fee" />
    <result column="actual_price" jdbcType="DECIMAL" property="actual_price" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="integral_money" jdbcType="DECIMAL" property="integral_money" />
    <result column="order_price" jdbcType="DECIMAL" property="order_price" />
    <result column="goods_price" jdbcType="DECIMAL" property="goods_price" />
    <result column="add_time" jdbcType="INTEGER" property="add_time" />
    <result column="confirm_time" jdbcType="INTEGER" property="confirm_time" />
    <result column="pay_time" jdbcType="INTEGER" property="pay_time" />
    <result column="freight_price" jdbcType="INTEGER" property="freight_price" />
    <result column="coupon_id" jdbcType="INTEGER" property="coupon_id" />
    <result column="parent_id" jdbcType="INTEGER" property="parent_id" />
    <result column="coupon_price" jdbcType="DECIMAL" property="coupon_price" />
    <result column="callback_status" jdbcType="CHAR" property="callback_status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_sn, user_id, order_status, shipping_status, pay_status, consignee, country, 
    province, city, district, address, mobile, postscript, shipping_id, shipping_name, 
    pay_id, pay_name, shipping_fee, actual_price, integral, integral_money, order_price, 
    goods_price, add_time, confirm_time, pay_time, freight_price, coupon_id, parent_id, 
    coupon_price, callback_status
  </sql>
  <select id="selectByExample" parameterType="com.taotieshop.demo.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nideshop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.taotieshop.demo.entity.OrderExample">
    delete from nideshop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taotieshop.demo.entity.Order">
    insert into nideshop_order (id, order_sn, user_id, 
      order_status, shipping_status, pay_status, 
      consignee, country, province, 
      city, district, address, 
      mobile, postscript, shipping_id, 
      shipping_name, pay_id, pay_name, 
      shipping_fee, actual_price, integral, 
      integral_money, order_price, goods_price, 
      add_time, confirm_time, pay_time, 
      freight_price, coupon_id, parent_id, 
      coupon_price, callback_status)
    values (#{id,jdbcType=INTEGER}, #{order_sn,jdbcType=VARCHAR}, #{user_id,jdbcType=INTEGER}, 
      #{order_status,jdbcType=BIT}, #{shipping_status,jdbcType=BIT}, #{pay_status,jdbcType=BIT}, 
      #{consignee,jdbcType=VARCHAR}, #{country,jdbcType=SMALLINT}, #{province,jdbcType=SMALLINT}, 
      #{city,jdbcType=SMALLINT}, #{district,jdbcType=SMALLINT}, #{address,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{postscript,jdbcType=VARCHAR}, #{shipping_id,jdbcType=TINYINT}, 
      #{shipping_name,jdbcType=VARCHAR}, #{pay_id,jdbcType=TINYINT}, #{pay_name,jdbcType=VARCHAR}, 
      #{shipping_fee,jdbcType=DECIMAL}, #{actual_price,jdbcType=DECIMAL}, #{integral,jdbcType=INTEGER}, 
      #{integral_money,jdbcType=DECIMAL}, #{order_price,jdbcType=DECIMAL}, #{goods_price,jdbcType=DECIMAL}, 
      #{add_time,jdbcType=INTEGER}, #{confirm_time,jdbcType=INTEGER}, #{pay_time,jdbcType=INTEGER}, 
      #{freight_price,jdbcType=INTEGER}, #{coupon_id,jdbcType=INTEGER}, #{parent_id,jdbcType=INTEGER}, 
      #{coupon_price,jdbcType=DECIMAL}, #{callback_status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.taotieshop.demo.entity.Order">
    insert into nideshop_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="order_sn != null">
        order_sn,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="order_status != null">
        order_status,
      </if>
      <if test="shipping_status != null">
        shipping_status,
      </if>
      <if test="pay_status != null">
        pay_status,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="postscript != null">
        postscript,
      </if>
      <if test="shipping_id != null">
        shipping_id,
      </if>
      <if test="shipping_name != null">
        shipping_name,
      </if>
      <if test="pay_id != null">
        pay_id,
      </if>
      <if test="pay_name != null">
        pay_name,
      </if>
      <if test="shipping_fee != null">
        shipping_fee,
      </if>
      <if test="actual_price != null">
        actual_price,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="integral_money != null">
        integral_money,
      </if>
      <if test="order_price != null">
        order_price,
      </if>
      <if test="goods_price != null">
        goods_price,
      </if>
      <if test="add_time != null">
        add_time,
      </if>
      <if test="confirm_time != null">
        confirm_time,
      </if>
      <if test="pay_time != null">
        pay_time,
      </if>
      <if test="freight_price != null">
        freight_price,
      </if>
      <if test="coupon_id != null">
        coupon_id,
      </if>
      <if test="parent_id != null">
        parent_id,
      </if>
      <if test="coupon_price != null">
        coupon_price,
      </if>
      <if test="callback_status != null">
        callback_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="order_sn != null">
        #{order_sn,jdbcType=VARCHAR},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="order_status != null">
        #{order_status,jdbcType=BIT},
      </if>
      <if test="shipping_status != null">
        #{shipping_status,jdbcType=BIT},
      </if>
      <if test="pay_status != null">
        #{pay_status,jdbcType=BIT},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=SMALLINT},
      </if>
      <if test="province != null">
        #{province,jdbcType=SMALLINT},
      </if>
      <if test="city != null">
        #{city,jdbcType=SMALLINT},
      </if>
      <if test="district != null">
        #{district,jdbcType=SMALLINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="postscript != null">
        #{postscript,jdbcType=VARCHAR},
      </if>
      <if test="shipping_id != null">
        #{shipping_id,jdbcType=TINYINT},
      </if>
      <if test="shipping_name != null">
        #{shipping_name,jdbcType=VARCHAR},
      </if>
      <if test="pay_id != null">
        #{pay_id,jdbcType=TINYINT},
      </if>
      <if test="pay_name != null">
        #{pay_name,jdbcType=VARCHAR},
      </if>
      <if test="shipping_fee != null">
        #{shipping_fee,jdbcType=DECIMAL},
      </if>
      <if test="actual_price != null">
        #{actual_price,jdbcType=DECIMAL},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="integral_money != null">
        #{integral_money,jdbcType=DECIMAL},
      </if>
      <if test="order_price != null">
        #{order_price,jdbcType=DECIMAL},
      </if>
      <if test="goods_price != null">
        #{goods_price,jdbcType=DECIMAL},
      </if>
      <if test="add_time != null">
        #{add_time,jdbcType=INTEGER},
      </if>
      <if test="confirm_time != null">
        #{confirm_time,jdbcType=INTEGER},
      </if>
      <if test="pay_time != null">
        #{pay_time,jdbcType=INTEGER},
      </if>
      <if test="freight_price != null">
        #{freight_price,jdbcType=INTEGER},
      </if>
      <if test="coupon_id != null">
        #{coupon_id,jdbcType=INTEGER},
      </if>
      <if test="parent_id != null">
        #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="coupon_price != null">
        #{coupon_price,jdbcType=DECIMAL},
      </if>
      <if test="callback_status != null">
        #{callback_status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taotieshop.demo.entity.OrderExample" resultType="java.lang.Long">
    select count(*) from nideshop_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nideshop_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.order_sn != null">
        order_sn = #{record.order_sn,jdbcType=VARCHAR},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
      <if test="record.order_status != null">
        order_status = #{record.order_status,jdbcType=BIT},
      </if>
      <if test="record.shipping_status != null">
        shipping_status = #{record.shipping_status,jdbcType=BIT},
      </if>
      <if test="record.pay_status != null">
        pay_status = #{record.pay_status,jdbcType=BIT},
      </if>
      <if test="record.consignee != null">
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=SMALLINT},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=SMALLINT},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=SMALLINT},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=SMALLINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.postscript != null">
        postscript = #{record.postscript,jdbcType=VARCHAR},
      </if>
      <if test="record.shipping_id != null">
        shipping_id = #{record.shipping_id,jdbcType=TINYINT},
      </if>
      <if test="record.shipping_name != null">
        shipping_name = #{record.shipping_name,jdbcType=VARCHAR},
      </if>
      <if test="record.pay_id != null">
        pay_id = #{record.pay_id,jdbcType=TINYINT},
      </if>
      <if test="record.pay_name != null">
        pay_name = #{record.pay_name,jdbcType=VARCHAR},
      </if>
      <if test="record.shipping_fee != null">
        shipping_fee = #{record.shipping_fee,jdbcType=DECIMAL},
      </if>
      <if test="record.actual_price != null">
        actual_price = #{record.actual_price,jdbcType=DECIMAL},
      </if>
      <if test="record.integral != null">
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.integral_money != null">
        integral_money = #{record.integral_money,jdbcType=DECIMAL},
      </if>
      <if test="record.order_price != null">
        order_price = #{record.order_price,jdbcType=DECIMAL},
      </if>
      <if test="record.goods_price != null">
        goods_price = #{record.goods_price,jdbcType=DECIMAL},
      </if>
      <if test="record.add_time != null">
        add_time = #{record.add_time,jdbcType=INTEGER},
      </if>
      <if test="record.confirm_time != null">
        confirm_time = #{record.confirm_time,jdbcType=INTEGER},
      </if>
      <if test="record.pay_time != null">
        pay_time = #{record.pay_time,jdbcType=INTEGER},
      </if>
      <if test="record.freight_price != null">
        freight_price = #{record.freight_price,jdbcType=INTEGER},
      </if>
      <if test="record.coupon_id != null">
        coupon_id = #{record.coupon_id,jdbcType=INTEGER},
      </if>
      <if test="record.parent_id != null">
        parent_id = #{record.parent_id,jdbcType=INTEGER},
      </if>
      <if test="record.coupon_price != null">
        coupon_price = #{record.coupon_price,jdbcType=DECIMAL},
      </if>
      <if test="record.callback_status != null">
        callback_status = #{record.callback_status,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nideshop_order
    set id = #{record.id,jdbcType=INTEGER},
      order_sn = #{record.order_sn,jdbcType=VARCHAR},
      user_id = #{record.user_id,jdbcType=INTEGER},
      order_status = #{record.order_status,jdbcType=BIT},
      shipping_status = #{record.shipping_status,jdbcType=BIT},
      pay_status = #{record.pay_status,jdbcType=BIT},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=SMALLINT},
      province = #{record.province,jdbcType=SMALLINT},
      city = #{record.city,jdbcType=SMALLINT},
      district = #{record.district,jdbcType=SMALLINT},
      address = #{record.address,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      postscript = #{record.postscript,jdbcType=VARCHAR},
      shipping_id = #{record.shipping_id,jdbcType=TINYINT},
      shipping_name = #{record.shipping_name,jdbcType=VARCHAR},
      pay_id = #{record.pay_id,jdbcType=TINYINT},
      pay_name = #{record.pay_name,jdbcType=VARCHAR},
      shipping_fee = #{record.shipping_fee,jdbcType=DECIMAL},
      actual_price = #{record.actual_price,jdbcType=DECIMAL},
      integral = #{record.integral,jdbcType=INTEGER},
      integral_money = #{record.integral_money,jdbcType=DECIMAL},
      order_price = #{record.order_price,jdbcType=DECIMAL},
      goods_price = #{record.goods_price,jdbcType=DECIMAL},
      add_time = #{record.add_time,jdbcType=INTEGER},
      confirm_time = #{record.confirm_time,jdbcType=INTEGER},
      pay_time = #{record.pay_time,jdbcType=INTEGER},
      freight_price = #{record.freight_price,jdbcType=INTEGER},
      coupon_id = #{record.coupon_id,jdbcType=INTEGER},
      parent_id = #{record.parent_id,jdbcType=INTEGER},
      coupon_price = #{record.coupon_price,jdbcType=DECIMAL},
      callback_status = #{record.callback_status,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>